{"ast":null,"code":"/*!\n * VERSION: 0.1.3\n * DATE: 2018-05-30\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n *\n * @author: Jack Doyle, jack@greensock.com\n */\nimport { _gsScope } from \"./TweenLite.js\";\nexport const EndArrayPlugin = _gsScope._gsDefine.plugin({\n  propName: \"endArray\",\n  API: 2,\n  version: \"0.1.3\",\n  //called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n  init: function (target, value, tween) {\n    var i = value.length,\n        a = this.a = [],\n        start,\n        end;\n    this.target = target;\n    this._mod = 0;\n\n    if (!i) {\n      return false;\n    }\n\n    while (--i > -1) {\n      start = target[i];\n      end = value[i];\n\n      if (start !== end) {\n        a.push({\n          i: i,\n          s: start,\n          c: end - start\n        });\n      }\n    }\n\n    return true;\n  },\n  mod: function (lookup) {\n    if (typeof lookup.endArray === \"function\") {\n      this._mod = lookup.endArray;\n    }\n  },\n  //called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)\n  set: function (ratio) {\n    var target = this.target,\n        a = this.a,\n        i = a.length,\n        mod = this._mod,\n        e,\n        val;\n\n    if (mod) {\n      while (--i > -1) {\n        e = a[i];\n        target[e.i] = mod(e.s + e.c * ratio, target);\n      }\n    } else {\n      while (--i > -1) {\n        e = a[i];\n        val = e.s + e.c * ratio;\n        target[e.i] = val < 0.000001 && val > -0.000001 ? 0 : val;\n      }\n    }\n  }\n});\nexport { EndArrayPlugin as default };","map":null,"metadata":{},"sourceType":"module"}