{"ast":null,"code":"var _jsxFileName = \"/Users/kevinc/prime/Tier2/SOLO/src/BallList/BallList.js\";\nimport React, { Component } from \"react\";\nimport { Transition } from \"react-transition-group\";\nimport { TimelineMax, TweenMax } from \"gsap/all\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport BallRout from \"../BallRout/BallRout\";\n\nclass BallList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      cards: [],\n      init: false\n    };\n    this.addNewPerson = this.addNewPerson.bind(this);\n    this.removePerson = this.removePerson.bind(this);\n    this.updateNameHandler = this.updateNameHandler.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // getDerivedStateFromProps https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops\n    // \"Deriving state leads to verbose code and makes your components difficult to think about.\"\n    // \"Make sure you’re familiar with simpler alternatives\"\n    // if the length is 0 and state.init is false\n    // set state of card to be true \n    if (state.cards.length === 0 && !state.init\n    /* <--- what happens? */\n    ) {\n        return {\n          cards: props.cards,\n          init: true\n        };\n      }\n\n    return null;\n  }\n\n  updateNameHandler(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  render() {\n    console.log(this.state.cards);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.cards.map((card, index) => React.createElement(BallRout, {\n      key: card.id,\n      index: index,\n      card: card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default BallList;","map":{"version":3,"sources":["/Users/kevinc/prime/Tier2/SOLO/src/BallList/BallList.js"],"names":["React","Component","Transition","TimelineMax","TweenMax","TransitionGroup","BallRout","BallList","constructor","props","state","value","cards","init","addNewPerson","bind","removePerson","updateNameHandler","getDerivedStateFromProps","length","e","setState","target","render","console","log","map","card","index","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAqC,UAArC;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAGA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAE7BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAED,SAAOG,wBAAP,CAAgCT,KAAhC,EAAuCC,KAAvC,EAA8C;AAC1C;AACA;AACA;AACA;AACA;AACA,QAAIA,KAAK,CAACE,KAAN,CAAYO,MAAZ,KAAuB,CAAvB,IAA4B,CAACT,KAAK,CAACG;AAAK;AAA5C,MAAsE;AAClE,eAAO;AACHD,UAAAA,KAAK,EAAEH,KAAK,CAACG,KADV;AAEHC,UAAAA,IAAI,EAAE;AAFH,SAAP;AAIH;;AACD,WAAO,IAAP;AACH;;AAEDI,EAAAA,iBAAiB,CAACG,CAAD,EAAI;AACjB,SAAKC,QAAL,CAAc;AAAEV,MAAAA,KAAK,EAAES,CAAC,CAACE,MAAF,CAASX;AAAlB,KAAd;AACH;;AAEDY,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWE,KAAvB;AACA,WAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGH,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWE,KAAX,CAAiBc,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAElB,oBAAC,QAAD;AACI,MAAA,GAAG,EAAED,IAAI,CAACE,EADd;AAEI,MAAA,KAAK,EAAED,KAFX;AAGI,MAAA,IAAI,EAAED,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CADL,CAHG,CAAP;AAiBH;;AApD4B;;AAyDjC,eAAepB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Transition } from \"react-transition-group\";\nimport { TimelineMax, TweenMax} from \"gsap/all\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport BallRout from \"../BallRout/BallRout\";\n\n\nclass BallList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            cards: [],\n            init: false\n        };\n        this.addNewPerson = this.addNewPerson.bind(this);\n        this.removePerson = this.removePerson.bind(this);\n        this.updateNameHandler = this.updateNameHandler.bind(this);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        // getDerivedStateFromProps https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops\n        // \"Deriving state leads to verbose code and makes your components difficult to think about.\"\n        // \"Make sure you’re familiar with simpler alternatives\"\n        // if the length is 0 and state.init is false\n        // set state of card to be true \n        if (state.cards.length === 0 && !state.init /* <--- what happens? */) {\n            return {\n                cards: props.cards,\n                init: true\n            };\n        }\n        return null;\n    }\n\n    updateNameHandler(e) {\n        this.setState({ value: e.target.value });\n    }\n\n    render() {\n        console.log(this.state.cards);\n        return <div className=\"container\">\n\n\n            <TransitionGroup className=\"row\">\n                {this.state.cards.map((card, index) => (\n\n                    <BallRout\n                        key={card.id}\n                        index={index}\n                        card={card}\n                       \n                    />\n                ))}\n\n            </TransitionGroup>\n\n        </div>;\n    }\n\n}\n\n\nexport default BallList;\n"]},"metadata":{},"sourceType":"module"}