{"ast":null,"code":"var _jsxFileName = \"/Users/kevinc/prime/Tier2/SOLO/src/BallList/BallList.js\";\nimport React, { Component } from \"react\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport Ball from \"../Ball/Ball\";\n\nclass BallList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      cards: [],\n      init: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // getDerivedStateFromProps https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops\n    // \"Deriving state leads to verbose code and makes your components difficult to think about.\"\n    // \"Make sure you’re familiar with simpler alternatives\"\n    // if the length is 0 and state.init is false\n    // set state of card to be true \n    if (state.cards.length === 0 && !state.init\n    /* <--- what happens? */\n    ) {\n        return {\n          cards: props.cards,\n          init: true\n        };\n      }\n\n    return null;\n  }\n\n  updateNameHandler(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  addNewPerson(e) {\n    e.preventDefault();\n\n    if (this.state.value !== \"\") {\n      this.setState({\n        cards: [].concat(this.state.cards, {\n          id: new Date().getTime(),\n          name: this.state.value\n        }),\n        value: \"\"\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state.cards);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.cards.map((card, index) => React.createElement(Ball, {\n      key: card.id,\n      index: index,\n      card: card,\n      remove: this.removePerson,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default BallList;","map":{"version":3,"sources":["/Users/kevinc/prime/Tier2/SOLO/src/BallList/BallList.js"],"names":["React","Component","TransitionGroup","Ball","BallList","constructor","props","state","value","cards","init","getDerivedStateFromProps","length","updateNameHandler","e","setState","target","addNewPerson","preventDefault","concat","id","Date","getTime","name","render","console","log","map","card","index","removePerson"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AACA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAEhCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,KAAK,EAAE,EAFK;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAb;AAKA;;AAED,SAAOC,wBAAP,CAAgCL,KAAhC,EAAuCC,KAAvC,EAA6C;AAC5C;AACA;AACA;AACA;AACA;AACA,QAAKA,KAAK,CAACE,KAAN,CAAYG,MAAZ,KAAuB,CAAvB,IAA4B,CAACL,KAAK,CAACG;AAAK;AAA7C,MAAwE;AACvE,eAAO;AACND,UAAAA,KAAK,EAAEH,KAAK,CAACG,KADP;AAENC,UAAAA,IAAI,EAAE;AAFA,SAAP;AAIA;;AACD,WAAO,IAAP;AACA;;AAEDG,EAAAA,iBAAiB,CAACC,CAAD,EAAG;AACnB,SAAKC,QAAL,CAAc;AAAEP,MAAAA,KAAK,EAAEM,CAAC,CAACE,MAAF,CAASR;AAAlB,KAAd;AACA;;AAGDS,EAAAA,YAAY,CAACH,CAAD,EAAG;AACdA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAK,KAAKX,KAAL,CAAWC,KAAX,KAAqB,EAA1B,EAA+B;AAC9B,WAAKO,QAAL,CAAc;AACbN,QAAAA,KAAK,EAAE,GAAGU,MAAH,CAAW,KAAKZ,KAAL,CAAWE,KAAtB,EAA6B;AACnCW,UAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EAD+B;AAEnCC,UAAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWC;AAFkB,SAA7B,CADM;AAKbA,QAAAA,KAAK,EAAE;AALM,OAAd;AAOA;AACD;;AAEDgB,EAAAA,MAAM,GAAE;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWE,KAAvB;AACF,WAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGN,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKF,KAAL,CAAWE,KAAX,CAAiBkB,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAErB,oBAAC,IAAD;AACC,MAAA,GAAG,EAAED,IAAI,CAACR,EADX;AAEC,MAAA,KAAK,EAAES,KAFR;AAGC,MAAA,IAAI,EAAED,IAHP;AAIC,MAAA,MAAM,EAAE,KAAKE,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF,CAHM,CAAP;AAiBA;;AA/D+B;;AAmEjC,eAAe1B,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\nimport Ball from \"../Ball/Ball\";\r\nclass BallList extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalue: \"\",\r\n\t\t\tcards: [],\r\n\t\t\tinit: false\r\n\t\t};\r\n\t}\r\n\r\n\tstatic getDerivedStateFromProps(props, state){\r\n\t\t// getDerivedStateFromProps https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops\r\n\t\t// \"Deriving state leads to verbose code and makes your components difficult to think about.\"\r\n\t\t// \"Make sure you’re familiar with simpler alternatives\"\r\n\t\t// if the length is 0 and state.init is false\r\n\t\t// set state of card to be true \r\n\t\tif ( state.cards.length === 0 && !state.init /* <--- what happens? */ ) {\r\n\t\t\treturn {\r\n\t\t\t\tcards: props.cards,\r\n\t\t\t\tinit: true\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tupdateNameHandler(e){\r\n\t\tthis.setState({ value: e.target.value });\r\n\t}\r\n\r\n\r\n\taddNewPerson(e){\r\n\t\te.preventDefault();\r\n\t\tif ( this.state.value !== \"\" ) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcards: [].concat( this.state.cards, {\r\n\t\t\t\t\tid: new Date().getTime(),\r\n\t\t\t\t\tname: this.state.value,\r\n\t\t\t\t}),\r\n\t\t\t\tvalue: \"\"\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n    console.log(this.state.cards);\r\n\t\treturn <div className=\"container\">\r\n\r\n\t\t\t\r\n\t\t\t<TransitionGroup className=\"row\">\r\n\t\t\t\t{this.state.cards.map((card, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t<Ball\r\n\t\t\t\t\t\tkey={card.id}\r\n\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\tcard={card}\r\n\t\t\t\t\t\tremove={this.removePerson}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t\t\r\n\t\t\t</TransitionGroup>\r\n\t\t\t\r\n\t\t</div>;\r\n\t}\r\n\r\n}\r\n\r\nexport default BallList;\r\n"]},"metadata":{},"sourceType":"module"}