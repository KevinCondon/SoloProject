{"ast":null,"code":"import React, { Component } from \"react\";\nimport { TimelineMax, TweenMax } from \"gsap/all\";\nimport { Transition, TransitionGroup } from \"react-transition-group\";\n\nclass EditPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeFor = (propertyName, event) => {\n      this.setState({\n        [propertyName]: event.target.value\n      });\n    };\n\n    this.state = {\n      // show: false,\n      name: '',\n      keyCombo1: '',\n      keyCombo2: '',\n      keyCombo3: '',\n      cards: [],\n      init: false\n    };\n    this.logoContainer = null; // logo tween\n\n    this.logoTween = null;\n  } // componentDidMount() {\n  //     this.setState({ show: !this.state.show });\n  //     this.logoTween = new TimelineMax({ paused: false, repeat: -1, yoyo: true })\n  //         .to(this.logoContainer, 3, { y: -5, x: 8, transformOrigin: \"left top\" })\n  //         .to(this.logoContainer, 3.5, { y: -4, x: 4, transformOrigin: \"left top\" })\n  //         .to(this.logoContainer, 2, { y: -1, x: 0, transformOrigin: \"left top\" })\n  //         .to(this.logoContainer, 3.5, { y: 6, x: 5, transformOrigin: \"left top\" })\n  // }\n\n\n  render() {\n    return React.createElement(React.Fragment, null, \"hi\");\n  }\n\n}\n\nexport default EditPanel;","map":{"version":3,"sources":["/Users/kevinc/prime/Tier2/SOLO/src/EditPanel/EditPanel.js"],"names":["React","Component","TimelineMax","TweenMax","Transition","TransitionGroup","EditPanel","constructor","props","handleChangeFor","propertyName","event","setState","target","value","state","name","keyCombo1","keyCombo2","keyCombo3","cards","init","logoContainer","logoTween","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,UAAtC;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,wBAA5C;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAE9BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA6BnBC,eA7BmB,GA6BD,CAACC,YAAD,EAAeC,KAAf,KAAyB;AACvC,WAAKC,QAAL,CAAc;AACV,SAACF,YAAD,GAAgBC,KAAK,CAACE,MAAN,CAAaC;AADnB,OAAd;AAGH,KAjCkB;;AAEf,SAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,SAAS,EAAE,EAJF;AAKTC,MAAAA,SAAS,EAAE,EALF;AAMTC,MAAAA,KAAK,EAAE,EANE;AAOTC,MAAAA,IAAI,EAAE;AAPG,KAAb;AASA,SAAKC,aAAL,GAAqB,IAArB,CAXe,CAYf;;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACH,GAhB6B,CAkB/B;AACC;AACA;AACA;AACA;AACA;AACA;AAGA;;;AAUAC,EAAAA,MAAM,GAAG;AAGL,WACI,+CADJ;AAwEH;;AAhH6B;;AAoHlC,eAAelB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { TimelineMax, TweenMax } from \"gsap/all\";\nimport { Transition, TransitionGroup } from \"react-transition-group\";\n\nclass EditPanel extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // show: false,\n            name: '',\n            keyCombo1: '',\n            keyCombo2: '',\n            keyCombo3: '',\n            cards: [],\n            init: false\n        };\n        this.logoContainer = null;\n        // logo tween\n        this.logoTween = null;\n    }\n\n   // componentDidMount() {\n    //     this.setState({ show: !this.state.show });\n    //     this.logoTween = new TimelineMax({ paused: false, repeat: -1, yoyo: true })\n    //         .to(this.logoContainer, 3, { y: -5, x: 8, transformOrigin: \"left top\" })\n    //         .to(this.logoContainer, 3.5, { y: -4, x: 4, transformOrigin: \"left top\" })\n    //         .to(this.logoContainer, 2, { y: -1, x: 0, transformOrigin: \"left top\" })\n    //         .to(this.logoContainer, 3.5, { y: 6, x: 5, transformOrigin: \"left top\" })\n\n\n    // }\n\n\n\n    handleChangeFor = (propertyName, event) => {\n        this.setState({\n            [propertyName]: event.target.value\n        });\n    }\n\n    render() {\n\n\n        return (\n            <>\n            hi\n                {/* <div ref={img => this.logoContainer = img}\n                    className=\"row justify-content-center\">\n\n                    {/* <Transition\n                        timeout={1000}\n                        mountOnEnter\n                        unmountOnExit\n\n                        in={show}\n                        addEndListener={(node, done) => {\n                            TweenMax.to(node, 2.35, {\n                                y: show ? 0 : 100,\n                                autoAlpha: show ? 1 : 0,\n                                onComplete: done\n                            });\n\n                        }}\n\n\n                    > \n                         <div class=\"row\">\n                        <div className=\"col tutorial-card simple\">\n                            <button\n                                type=\"button\"\n                                className=\"close\"\n                                onClick={() => this.setState({ show: false })}>\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n\n\n                            <div>\n                                <div class=\"form-group row\">\n                                    <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Nickname</label>\n                                    <div class=\"col-auto\">\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Autopopulate\"\n                                            onChange={(event) => this.handleChangeFor('name', event)} />\n                                    </div>\n                                </div>\n\n                                <div class=\"form-row align-items-center\">\n                                    <label for=\"input\" class=\"col-sm-2 col-form-label\">Combination</label>\n\n                                    <div class=\"col-sm-1 my-1\">\n                                        <input type=\"text\" class=\"form-control\" id=\"inlineFormComb1\" maxLength=\"2\"\n                                            onChange={(event) => this.handleChangeFor('keyCombo1', event)} />\n                                    </div>\n                                    -\n                                        <div class=\"input-group\">\n                                            <input type=\"text\" class=\"form-control\" id=\"inlineFormComb2\" maxLength=\"2\"\n                                                onChange={(event) => this.handleChangeFor('keyCombo2', event)} />\n                                        </div>\n                                    </div>\n                                    -\n                                        <div class=\"col-sm-1 my-1\">\n                                        <div class=\"input-group\">\n                                            <input type=\"text\" class=\"form-control\" id=\"inlineFormComb3\" maxLength=\"2\"\n                                                onChange={(event) => this.handleChangeFor('keyCombo3', event)} />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n                    {/* </Transition> \n\n                </div> */}\n            </>\n        )\n    }\n\n}\n\nexport default EditPanel;\n"]},"metadata":{},"sourceType":"module"}