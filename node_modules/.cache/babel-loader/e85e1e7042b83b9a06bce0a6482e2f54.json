{"ast":null,"code":"var _jsxFileName = \"/Users/kevinc/prime/Tier2/SOLO/src/Transition-Card/transition-list.js\";\nimport React, { Component } from \"react\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport TransitionCard from \"./transition-card\";\nimport BallRouter from \"../BallRouter/BallRouter.js\";\n\nclass TransitionList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      cards: [],\n      init: false\n    };\n    this.addNewPerson = this.addNewPerson.bind(this);\n    this.removePerson = this.removePerson.bind(this);\n    this.updateNameHandler = this.updateNameHandler.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // getDerivedStateFromProps https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops\n    // \"Deriving state leads to verbose code and makes your components difficult to think about.\"\n    // \"Make sure youâ€™re familiar with simpler alternatives\"\n    // if the length is 0 and state.init is false\n    // set state of card to be true \n    if (state.cards.length === 0 && !state.init\n    /* <--- what happens? */\n    ) {\n        return {\n          cards: props.cards,\n          init: true\n        };\n      }\n\n    return null;\n  }\n\n  updateNameHandler(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  removePerson(id) {\n    this.setState({\n      cards: this.state.cards.filter(card => card.id !== id)\n    });\n  }\n\n  addNewPerson(e) {\n    e.preventDefault();\n\n    if (this.state.value !== \"\") {\n      this.setState({\n        cards: [].concat(this.state.cards, {\n          id: new Date().getTime(),\n          name: this.state.value\n        }),\n        value: \"\"\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state.cards);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"List of Items\"), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"In this we don't pass the \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"in\"), \" property to the component. The \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"<TransitionGroup>\"), \" component handles and passes the in boolean to each \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"<Transition>\"), \" element. Then in every transition child, we can access the \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"'in'\"), \" boolean on it's props.\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-12 col-md-6 mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.addNewPerson,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"personName\",\n      name: \"personName\",\n      className: \"form-control\",\n      onChange: this.updateNameHandler,\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn gsap-btn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Add Person\")))))), React.createElement(TransitionGroup, {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.cards.map((card, index) => // <>\n    // <BallRouter index={index} />\n    React.createElement(TransitionCard, {\n      key: card.id,\n      index: index,\n      card: card,\n      remove: this.removePerson,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }) // /* </> \n    )));\n  }\n\n}\n\nexport default TransitionList;","map":{"version":3,"sources":["/Users/kevinc/prime/Tier2/SOLO/src/Transition-Card/transition-list.js"],"names":["React","Component","TransitionGroup","TransitionCard","BallRouter","TransitionList","constructor","props","state","value","cards","init","addNewPerson","bind","removePerson","updateNameHandler","getDerivedStateFromProps","length","e","setState","target","id","filter","card","preventDefault","concat","Date","getTime","name","render","console","log","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\nimport TransitionCard from \"./transition-card\";\r\nimport BallRouter from \"../BallRouter/BallRouter.js\";\r\n\r\nclass TransitionList extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalue: \"\",\r\n\t\t\tcards: [],\r\n\t\t\tinit: false\r\n\t\t};\r\n\t\tthis.addNewPerson = this.addNewPerson.bind(this);\r\n\t\tthis.removePerson = this.removePerson.bind(this);\r\n\t\tthis.updateNameHandler = this.updateNameHandler.bind(this);\r\n\t}\r\n\r\n\tstatic getDerivedStateFromProps(props, state){\r\n\t\t// getDerivedStateFromProps https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops\r\n\t\t// \"Deriving state leads to verbose code and makes your components difficult to think about.\"\r\n\t\t// \"Make sure youâ€™re familiar with simpler alternatives\"\r\n\t\t// if the length is 0 and state.init is false\r\n\t\t// set state of card to be true \r\n\t\tif ( state.cards.length === 0 && !state.init /* <--- what happens? */ ) {\r\n\t\t\treturn {\r\n\t\t\t\tcards: props.cards,\r\n\t\t\t\tinit: true\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tupdateNameHandler(e){\r\n\t\tthis.setState({ value: e.target.value });\r\n\t}\r\n\r\n\tremovePerson(id){\r\n\t\tthis.setState({\r\n\t\t\tcards: this.state.cards.filter(card => card.id !== id)\r\n\t\t});\r\n\t}\r\n\r\n\taddNewPerson(e){\r\n\t\te.preventDefault();\r\n\t\tif ( this.state.value !== \"\" ) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcards: [].concat( this.state.cards, {\r\n\t\t\t\t\tid: new Date().getTime(),\r\n\t\t\t\t\tname: this.state.value,\r\n\t\t\t\t}),\r\n\t\t\t\tvalue: \"\"\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n    console.log(this.state.cards);\r\n\t\treturn <div className=\"container\">\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t<h3 className=\"text-center\">List of Items</h3>\r\n\t\t\t\t\t{/* <p className=\"lead\">Just like the previous sample, this animates the mount/unmount of a collection of components or elements wrapped in a <strong>&lt;Transition&gt;</strong> tag.</p> */}\r\n\t\t\t\t\t<p className=\"lead\">In this we don't pass the <strong>in</strong> property to the component. The <strong>&lt;TransitionGroup&gt;</strong> component handles and passes the in boolean to each <strong>&lt;Transition&gt;</strong> element. Then in every transition child, we can access the <strong>'in'</strong> boolean on it's props.</p>\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* form */}\r\n\t\t\t\t<div className=\"col-12 col-md-6 mb-5\">\r\n\t\t\t\t\t<form onSubmit={this.addNewPerson}>\r\n\t\t\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tid=\"personName\"\r\n\t\t\t\t\t\t\t\tname=\"personName\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tonChange={this.updateNameHandler}\r\n\t\t\t\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className=\"input-group-append\">\r\n\t\t\t\t\t\t\t\t<button className=\"btn gsap-btn\" type=\"submit\">Add Person</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\r\n\t\t\t\r\n\t\t\t<TransitionGroup className=\"row\">\r\n\t\t\t\t{this.state.cards.map((card, index) => \r\n\t\t\t\t\t// <>\r\n\t\t\t\t\t// <BallRouter index={index} />\r\n\t\t\t\t\t<TransitionCard\r\n\t\t\t\t\t\tkey={card.id}\r\n\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\tcard={card}\r\n\t\t\t\t\t\tremove={this.removePerson}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t// /* </> \r\n\t\t\t\t)}\r\n\t\t\t\r\n\t\t\t</TransitionGroup>\r\n\t\t\t\r\n\t\t</div>;\r\n\t}\r\n\r\n}\r\n\r\nexport default TransitionList;\r\n"]},"metadata":{},"sourceType":"module"}